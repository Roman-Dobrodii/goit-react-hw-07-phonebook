{"version":3,"sources":["redux/contact/contact-actions.js","redux/contact/contact-reducer.js","redux/store.js","components/mainTitle/MainTitle.js","redux/contactsOperations/contactsOperation.js","redux/contact/contact-selectors.js","components/contactForm/ContactForm.js","components/findContactInput/FindContactInput.js","components/contactListItems/ContactsListItems.js","components/contactsList/ContactsList.js","components/app/App.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","changeFilter","items","createReducer","actionTypes","state","action","payload","filter","contact","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","MainTitle","className","addContact","name","number","dispatch","contactsActions","axios","post","then","response","console","log","data","catch","error","fetchContacts","get","removeContact","delete","getFilter","getContacts","getLoading","getContactById","createSelector","contactId","find","getContactsFiltered","toLowerCase","includes","ContactForm","formInitialState","alertMessageShow","handleChange","target","value","setState","handleSubmit","evt","preventDefault","props","onAddContact","toggleAlert","this","CSSTransition","in","timeout","classNames","unmountOnExit","onClick","onSubmit","type","onChange","placeholder","Component","mapDispathToProps","contactsOperation","connect","contactSelectors","e","contactActions","ownProps","item","deleteContact","getFilteredContact","style","display","justifyContent","length","TransitionGroup","component","map","App","showContacts","onFetchContacts","prevProps","nextProps","appear","filteredContacts","IsLoadingContacts","color","height","width","mapDispatchToProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6971e7d1.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactError = createAction(\"contacts/aremoverror\");\n\nconst fetchContactsRequest = createAction(\"contactfetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\");\n\nconst changeFilter = createAction(\"contact/changeFilter\");\n\nexport default {\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n\n  addContactError,\n  addContactSuccess,\n  addContactRequest,\n\n  changeFilter,\n\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n};\n","import { combineReducers } from \"redux\";\nimport actionTypes from \"./contact-actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst items = createReducer([], {\n  [actionTypes.fetchContactsSuccess]: (state, action) => action.payload,\n  [actionTypes.addContactSuccess]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [actionTypes.removeContactSuccess]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actionTypes.changeFilter]: (state, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [actionTypes.addContactRequest]: () => true,\n  [actionTypes.addContactSuccess]: () => false,\n  [actionTypes.addContactError]: () => false,\n  [actionTypes.removeContactRequest]: () => true,\n  [actionTypes.removeContactSuccess]: () => false,\n  [actionTypes.removeContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import contactsReducer from \"./contact/contact-reducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\n\nconst MainTitle = () => {\n  return (\n    <>\n      <h1 className=\"mainTitle\">Phonebook</h1>\n    </>\n  );\n};\n\nexport default MainTitle;\n","import contactsActions from \"../contact/contact-actions\";\nimport axios from \"axios\";\n\nconst addContact = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n\n  axios\n    .post(\"http://localhost:2000/contacts\", { name, number })\n    .then((response) => {\n      console.log(response);\n      dispatch(contactsActions.addContactSuccess(response.data));\n    })\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n  axios\n    .get(\"http://localhost:2000/contacts\")\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(contactsActions.removeContactRequest());\n  axios\n    .delete(`http://localhost:2000/contacts/${id}`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.removeContactError(error)));\n};\nexport default {\n  addContact,\n  fetchContacts,\n  removeContact,\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.contacts.loading;\nconst getFilter = (state) => state.contacts.filter;\nconst getContacts = (state) => state.contacts.items;\n\nconst getContactById = createSelector(\n  [(state, contactId) => contactId, getContacts],\n  (contactId, contacts) => {\n    return contacts.find((contact) => contact.id === contactId);\n  }\n);\n\nconst getContactsFiltered = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport default {\n  getLoading,\n  getFilter,\n  getContacts,\n  getContactById,\n  getContactsFiltered,\n};\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactsOperation from \"../../redux/contactsOperations/contactsOperation\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n\nclass ContactForm extends Component {\n  formInitialState = {\n    name: \"\",\n    number: \"\",\n  };\n  state = {\n    ...this.formInitialState,\n    alertMessageShow: false,\n  };\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    const { name, number } = this.state;\n\n    const { contacts } = this.props;\n    const existedContact = contacts.find((contact) => contact.name === name);\n    if (existedContact) {\n      this.setState({ alertMessageShow: true });\n      return this.setState({ ...this.formInitialState });\n    }\n\n    this.props.onAddContact(name, number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n  toggleAlert = () => {\n    this.setState({ alertMessageShow: false });\n  };\n  render() {\n    const { name, number, alertMessageShow } = this.state;\n\n    return (\n      <section className=\"wrapper\">\n        <CSSTransition\n          in={alertMessageShow}\n          timeout={250}\n          classNames=\"alertFade\"\n          unmountOnExit\n        >\n          <button className=\"alertMessage\" onClick={this.toggleAlert}>\n            <p>Contact already exists</p>\n          </button>\n        </CSSTransition>\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <label>\n            Name\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              placeholder=\"Enter name\"\n            ></input>\n          </label>\n          <label>\n            Number\n            <input\n              className=\"input\"\n              type=\"tel\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n              placeholder=\"Enter number\"\n            ></input>\n          </label>\n          <button type=\"submit\" className=\"addContact-button\">\n            Add contact\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactSelectors.getContacts(state),\n  filter: contactSelectors.getFilter(state),\n});\nconst mapDispathToProps = {\n  onAddContact: contactsOperation.addContact,\n};\nexport default connect(mapStateToProps, mapDispathToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactActions from \"../../redux/contact/contact-actions\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n\nfunction FindContactInput({ value, onChange }) {\n  return (\n    <div className=\"find-input_frame \">\n      <label>\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  value: contactSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContactInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperation from \"../../redux/contactsOperations/contactsOperation\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n\nconst ContactsListItems = ({ id, name, number, deleteContact }) => {\n  return (\n    <li className=\"contact\">\n      <span>{name}</span>\n      <span>{number}</span>\n      <button\n        className=\"deleteBtn\"\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        x\n      </button>\n    </li>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const item = contactSelectors.getContactById(state, ownProps.id);\n  return { ...item };\n};\n\nconst mapDispatchToPRops = (dispatch, ownProps) => ({\n  deleteContact: (id) => dispatch(contactsOperation.removeContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToPRops)(ContactsListItems);\n","import React from \"react\";\nimport ContactsListItems from \"../contactListItems/ContactsListItems\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n\nconst ContactsList = ({ items, contacts }) => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      {contacts.length > 0 && items.length === 0 ? (\n        <h4>...Nothing Found</h4>\n      ) : (\n        <TransitionGroup component=\"ul\" className=\"contacts-list\">\n          {items.map(({ id }) => (\n            <CSSTransition\n              key={id}\n              classNames=\"taskList-fade\"\n              timeout={250}\n              unmountOnExit\n            >\n              <ContactsListItems id={id} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const getFilteredContact = contactSelectors.getContactsFiltered(state);\n\n  console.log(\"items\", getFilteredContact);\n  return {\n    items: getFilteredContact,\n    contacts: contactSelectors.getContacts(state),\n  };\n};\n\nexport default connect(mapStateToProps)(ContactsList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\n\nimport MainTitle from \"../mainTitle/MainTitle\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport FindContactInput from \"../findContactInput/FindContactInput\";\nimport ContactsList from \"../contactsList/ContactsList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport contactsOperation from \"../../redux/contactsOperations/contactsOperation\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n\nclass App extends Component {\n  state = {\n    showContacts: false,\n  };\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  componentDidUpdate(prevProps, nextProps) {\n    console.log(\"prevProps\", prevProps);\n    console.log(\"nextProps\", nextProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"mainTitle-slideIn\"\n          timeout={5000}\n          unmountOnExit\n        >\n          <MainTitle />\n        </CSSTransition>\n\n        <ContactForm />\n\n        <CSSTransition\n          in={\n            this.props.filteredContacts.length > 1 ||\n            this.props.contacts.length > 1\n          }\n          timeout={250}\n          classNames=\"findContact\"\n          unmountOnExit\n        >\n          <FindContactInput />\n        </CSSTransition>\n\n        <ContactsList />\n        {this.props.IsLoadingContacts && (\n          <Loader\n            style={{ display: \"flex \", justifyContent: \"center\" }}\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  const getfilteredContacts = contactSelectors.getContactsFiltered(state);\n\n  return {\n    filteredContacts: getfilteredContacts,\n    IsLoadingContacts: contactSelectors.getLoading(state),\n    filter: contactSelectors.getFilter(state),\n    contacts: state.contacts.items,\n  };\n};\n\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperation.fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\n\nReactDOM.render(\n  <div>\n    {/* <React.StrictMode> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </React.StrictMode> */}\n  </div>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}